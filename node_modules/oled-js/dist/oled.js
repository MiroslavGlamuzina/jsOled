var drawLine = function (options) {
    var immed = (options.sync) ? true : options.sync;
    var _a = options.start, x0 = _a[0], y0 = _a[1];
    var _b = options.end, x1 = _b[0], y1 = _b[1];
    var dx = Math.abs(x1 - x0), sx = x0 < x1 ? 1 : -1, dy = Math.abs(y1 - y0), sy = y0 < y1 ? 1 : -1;
    var err = (dx > dy ? dx : -dy) / 2;
    var x = x0, y = y0;
    while (true) {
        var pixel = { pixels: [[x, y, options.color]], sync: false };
        drawPixel(pixel);
        if (x === x1 && y === y1)
            break;
        var e2 = err;
        if (e2 > -dx) {
            err -= dy;
            x += sx;
        }
        if (e2 < dy) {
            err += dx;
            y += sy;
        }
    }
    if (immed) {
    }
};
var drawPixel = function (options) {
    var _this = this;
    var immed = (options.sync) ? true : options.sync;
    options.pixels.forEach(function (el) {
        var x = el[0], y = el[1], color = el[2];
        if (x > _this.WIDTH || y > _this.HEIGHT)
            return;
        var page = Math.floor(y / 8), pageShift = 0x01 << (y - 8 * page);
        var byte = x + (_this.WIDTH * page);
        if (color === 0) {
            _this.buffer[byte] &= ~pageShift;
        }
        else {
            _this.buffer[byte] |= pageShift;
        }
        if (_this.dirtyBytes.indexOf(byte) === -1) {
            _this.dirtyBytes.push(byte);
        }
    });
    if (immed) {
    }
};
//# sourceMappingURL=oled.js.map